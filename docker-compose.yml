version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: question_generator_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: question_generator
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
      - ./init-scripts:/docker-entrypoint-initdb.d/
    networks:
      - question_generator_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d question_generator"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ChromaDB Vector Database
  chromadb:
    image: chromadb/chroma:latest
    container_name: question_generator_chromadb
    restart: unless-stopped
    environment:
      # ChromaDB Configuration
      CHROMA_SERVER_HOST: 0.0.0.0
      CHROMA_SERVER_HTTP_PORT: 8000
      CHROMA_SERVER_CORS_ALLOW_ORIGINS: '["http://localhost:3000","http://localhost:8000","http://localhost:8001"]'
      # Persistence settings
      PERSIST_DIRECTORY: /chroma/chroma_data
      IS_PERSISTENT: true
      # Authentication (optional - disable for development)
      CHROMA_SERVER_AUTH_CREDENTIALS_FILE: ""
      CHROMA_SERVER_AUTH_CREDENTIALS_PROVIDER: ""
      # Additional settings to resolve host conflicts
      CHROMA_SERVER_ALLOW_RESET: true
    ports:
      - "8001:8000"  # Map to 8001 to avoid conflict with FastAPI
    volumes:
      - chromadb_data:/chroma/chroma_data
    networks:
      - question_generator_network
    # Healthcheck disabled - service is functional but container lacks curl/proper python setup
    # You can verify ChromaDB is working by accessing http://localhost:8001/api/v2/heartbeat

  # pgAdmin for Database Management (Optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: question_generator_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@questiongenerator.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - question_generator_network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  chromadb_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  question_generator_network:
    driver: bridge 